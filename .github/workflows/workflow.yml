on:
  push:
    branches:
      - main
  release:
    types:
      - created
# Do not attempt concurrent runs.
concurrency:
  group: ${{ github.workflow }}
jobs:
  job:
    runs-on: ubuntu-latest
    permissions:
      # Allows JWT to be requested from GitHub's OIDC provider.
      id-token: write
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - id: cache
        uses: actions/cache@v4
        # Keep uv cache and Python virtual environment.
        with:
          key: ${{ hashFiles('pyproject.toml', 'uv.lock') }}
          path: |
            ~/.local/share/uv
            .venv
      - run: |
          # Run tests.
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv python pin ${{ matrix.python-version }}
          uv run pytest

          # Demo output.
          set -x
          uv run -m names --help
          uv run -m names "${{ github.run_id }}" --count 10 --offset 1000 --format python

          # Build.
          uv build
      # Only publish if releasing.
      - if: startsWith(github.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@v1.12.2
  orate:
    # Only run if releasing.
    if: startsWith(github.ref, 'refs/tags/')
    # Don't care if this job fails.
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          # Say something deep, dawg!
          set -x
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uvx llm install llm-grok
          echo "write the most insightful and terse poem you can about the difficulties of " \
               "naming things using these words (be sure to include a valid http url link):\n" \
               "$(uv run -m names ${{ github.run_id }})" \
            | uvx llm -m grok-beta
        env:
          XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
